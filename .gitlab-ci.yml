image: registry.git.avidi.tech/docker/teracy/angular-cli:latest

stages:
    - install
    - build
    - deploy

.libs-cache:
    tags:
        - docker
    cache:
        paths:
            - node_modules/

install:
    stage: install
    rules:
        - if: $CI_COMMIT_TAG == null
    extends: .libs-cache
    script:
        - npm i

build-web-ssr:
    stage: build
    rules:
        - if: $CI_COMMIT_TAG == null
    tags:
        - docker
    cache:
        paths:
            - dist/
            - node_modules/
    artifacts:
        expire_in: 1 day
        paths:
            - dist/
    script:
        - npm install --save-dev @angular-devkit/build-angular
        - npm run build:static

deploy-latest:
    stage: deploy
    services:
        - registry.gitlab.com/docker.hub/docker:dind
    image: registry.gitlab.com/docker.hub/docker:latest
    rules:
      - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    cache:
        paths:
            - dist/
    script:
        - CONTAINER_IMAGE="$CI_REGISTRY/$CI_PROJECT_PATH"
        - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
        - docker build --tag $CONTAINER_IMAGE:latest .
        - docker push $CONTAINER_IMAGE:latest
        - docker logout
    tags:
        - docker

deploy-stage-from-latest:
  stage: deploy
  image: docker:latest
  services:
      - docker:dind
  rules:
      - if: $CI_COMMIT_TAG != null
  script:
      - CONTAINER_IMAGE="$CI_REGISTRY/$CI_PROJECT_PATH"
      - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
      - docker pull $CONTAINER_IMAGE:latest
      - docker tag $CONTAINER_IMAGE:latest $CONTAINER_IMAGE:stage
      - docker push $CONTAINER_IMAGE:stage
      - docker logout
  tags:
      - docker
